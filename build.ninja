cflags = -target aarch64-elf -ffreestanding -O2 -Wall -Wextra -Isrc
ldflags = -T linker.ld -O2

rule cc
  command = clang $cflags -c $in -o $out
  description = CC $out

rule ld
  command = ld.lld $ldflags -o $out $in
  description = LD $out

rule objcopy
  command = llvm-objcopy $in -O binary $out
  description = OBJCOPY $out

build build/boot.o: cc src/boot.S
build build/main.o: cc src/main.c
build build/uart/uart.o: cc src/uart/uart.c
build build/mmio/mmio.o: cc src/mmio/mmio.c
build build/delay/delay.o: cc src/delay/delay.c

build os.elf: ld build/boot.o build/main.o build/uart/uart.o build/mmio/mmio.o build/delay/delay.o
build kernel8.img: objcopy os.elf

default kernel8.img
